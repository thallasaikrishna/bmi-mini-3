{"version":3,"sources":["components/TextInput.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["TextInput","props","react_default","a","createElement","label","type","value","placeholder","onChange","handleChange","Button","onClick","App","_useState","useState","_useState2","Object","slicedToArray","weight","setWeight","_useState3","_useState4","height","setHeight","_useState5","_useState6","bmi","setBmi","_useState7","_useState8","bmiClass","setBmiClass","getBmi","className","components_TextInput","event","target","components_Button","bmiValue","Math","pow","toFixed","isNaN","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"4NAgBeA,EAdG,SAACC,GACjB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAQH,EAAMI,MAAQ,KACtBH,EAAAC,EAAAC,cAAA,SACEE,KAAK,SACLC,MAAON,EAAMM,MACbC,YAAaP,EAAMO,YACnBC,SAAUR,EAAMS,iBCJTC,EAJA,SAACV,GACd,OAAOC,EAAAC,EAAAC,cAAA,UAAQQ,QAASX,EAAMW,SAAUX,EAAMI,QCuEjCQ,SApEH,WACV,IAAAC,EAA4BC,qBAA5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAeI,EAAfJ,EAAA,GACAK,EAA4BN,qBAA5BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOE,EAAPD,EAAA,GAAeE,EAAfF,EAAA,GACAG,EAAsBV,qBAAtBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAOE,EAAPD,EAAA,GAAYE,EAAZF,EAAA,GACAG,EAAgCd,qBAAhCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAAOE,EAAPD,EAAA,GAAiBE,EAAjBF,EAAA,GAcMG,EAAS,SAACN,GACd,OAAIA,EAAM,KACD,cAELA,GAAO,MAAQA,EAAM,KAChB,gBAELA,GAAO,IAAMA,EAAM,KACd,aAELA,GAAO,GACF,eADT,GAKF,OACEzB,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACbhC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,aACbhC,EAAAC,EAAAC,cAAA,4CAEAF,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACbhC,EAAAC,EAAAC,cAAC+B,EAAD,CACE9B,MAAM,SACNG,YAAY,qBACZE,aApCiB,SAAC0B,GAAD,OAAWZ,EAAUY,EAAMC,OAAO9B,QAqCnDA,MAAOgB,KAGXrB,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACbhC,EAAAC,EAAAC,cAAC+B,EAAD,CACE9B,MAAM,SACNG,YAAY,qBACZE,aA3CiB,SAAC0B,GAAD,OAAWhB,EAAUgB,EAAMC,OAAO9B,QA4CnDA,MAAOY,KAGXjB,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,UACbhC,EAAAC,EAAAC,cAACkC,EAAD,CAAQjC,MAAM,YAAYO,QA9Cf,WACjB,IAAI2B,GAAYpB,EAAMqB,KAAAC,IAAIlB,EAAS,IAAQ,IAAGmB,QAAQ,GACtDd,EAAOW,GACP,IAAIR,EAAWE,EAAOM,GACtBP,EAAYD,GACZP,EAAU,IACVJ,EAAU,QA0CNlB,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACZS,MAAMhB,GAAO,KAAOzB,EAAAC,EAAAC,cAAA,wBAAgBuB,IAEvCzB,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACbhC,EAAAC,EAAAC,cAAA,UAAK2B,QCvDAa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPxD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,WAAP,KACEzD,EAAAC,EAAAC,cAACwD,EAAD,OAEFC,SAASC,eAAe,SAM1BlB","file":"static/js/main.b981a94a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TextInput = (props) => {\r\n  return (\r\n    <div>\r\n      <label>{props.label + \" \"}</label>\r\n      <input\r\n        type=\"number\"\r\n        value={props.value}\r\n        placeholder={props.placeholder}\r\n        onChange={props.handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  return <button onClick={props.onClick}>{props.label}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\n\nimport TextInput from \"./components/TextInput\";\nimport Button from \"./components/Button\";\n\nimport \"./styles.css\";\nconst App = () => {\n  const [weight, setWeight] = useState();\n  const [height, setHeight] = useState();\n  const [bmi, setBmi] = useState();\n  const [bmiClass, setBmiClass] = useState();\n\n  const handleHeightChange = (event) => setHeight(event.target.value);\n  const handleWeightChange = (event) => setWeight(event.target.value);\n\n  const computeBmi = () => {\n    let bmiValue = (weight / (height / 100) ** 2).toFixed(2);\n    setBmi(bmiValue);\n    let bmiClass = getBmi(bmiValue);\n    setBmiClass(bmiClass);\n    setHeight(\"\");\n    setWeight(\"\");\n  };\n\n  const getBmi = (bmi) => {\n    if (bmi < 18.5) {\n      return \"Underweight\";\n    }\n    if (bmi >= 18.5 && bmi < 24.9) {\n      return \"Normal weight\";\n    }\n    if (bmi >= 25 && bmi < 29.9) {\n      return \"Overweight\";\n    }\n    if (bmi >= 30) {\n      return \"Obesity\";\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h2>Welcome to our BMI Calculator!</h2>\n\n        <div className=\"row\">\n          <TextInput\n            label=\"Height\"\n            placeholder=\"Enter height in cm\"\n            handleChange={handleHeightChange}\n            value={height}\n          />\n        </div>\n        <div className=\"row\">\n          <TextInput\n            label=\"Weight\"\n            placeholder=\"Enter weight in kg\"\n            handleChange={handleWeightChange}\n            value={weight}\n          />\n        </div>\n        <div className=\"rowCal\">\n          <Button label=\"CALCULATE\" onClick={computeBmi} />\n        </div>\n        <div className=\"row\">\n          {isNaN(bmi) ? null : <h3>Your BMI = {bmi}</h3>}\n        </div>\n        <div className=\"row\">\n          <h3>{bmiClass}</h3>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}